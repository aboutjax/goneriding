{"version":3,"sources":["webpack:///./src/components/post-layout.js","webpack:///./src/components/altitudeChart.js","webpack:///./src/components/map.js","webpack:///./src/components/markerLink.js","webpack:///./src/components/loader.js","webpack:///./src/components/stravaStats.js","webpack:///./src/components/routeCard.js","webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js"],"names":["Layout","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","className","header","siteTitle","site","siteMetadata","title","_755544856","propTypes","PropTypes","node","isRequired","marker","mapStyle","featureType","elementType","stylers","color","visibility","Map","initMap","startLatlng","_this","props","activityData","start_latlng","endLatlng","end_latlng","encodedPolyline","map","polyline","decodedPolyline","window","google","maps","geometry","encoding","decodePath","document","getElementById","center","lat","lng","zoom","styles","setPolyline","Polyline","path","strokeColor","strokeOpacity","strokeWeight","bounds","LatLngBounds","extend","forEach","element","Marker","position","icon","SymbolPath","CIRCLE","scale","fillOpacity","fillColor","setMap","fitBounds","componentDidMount","this","loading","id","Component","MarkerLink","showOnMap","_this$props","label","myLatLng","parseFloat","text","panTo","setZoom","scrollIntoView","behavior","block","inline","onClick","bind","role","aria-label","Loader","width","height","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","strokeLinecap","d","Stat","value","unit","htmlFor","name","StravaStats","distanceMeter","distance","distanceKilometer","_","round","elevation","total_elevation_gain","calories","moving_time_seconds","moving_time","formatted","moment","utc","format","loader","stravaStats_Stat","AltitudeChart","latlngStream","distanceStream","altitudeStream","altitudeChartDataOptions","tooltips","mode","intersect","displayColors","xPadding","yPadding","caretPadding","titleFontSize","titleFontColor","titleFontStyle","bodyFontSize","titleSpacing","callbacks","footer","tooltipItems","latlng","newLatLng","latlngDatasetStream","datasets","onHoverDataIndex","index","correspondingLatlng","setPosition","LatLng","t","yLabel","hover","animationDuration","layout","padding","left","scales","yAxes","gridLines","zeroLineColor","ticks","beginAtZero","min","autoSkip","autoSkipPadding","fontColor","callback","type","display","drawOnChartArea","xAxes","legend","altitudeChartData","labels","m","borderColor","borderWidth","backgroundColor","pointRadius","pointBorderWidth","lineTension","yAxisID","showLine","es","options","RouteCard","renderAst","rehypeReact","React","components","marker-link","route-card","Compiler","PostPage","_Component","call","state","post","queryPost","fetchData","_this2","activityApiUrl","frontmatter","strava_id","requests","url","fetch","method","headers","content-type","authorization","then","resp","json","Array","isArray","setState","streams","Promise","all","responses","console","log","seo","keywords","description","excerpt","image","cover_image","childImageSharp","fluid","src","post_layout","gatsby_image_default","location","date","author","altitudeChart","stravaStats","htmlAst","href","route_file","publicURL","__webpack_require__","r","__webpack_exports__","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","Error","object","string","func","module","exports","require","default","ProdPageRenderer","pageResources","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","Header","to","defaultProps","Footer","react__WEBPACK_IMPORTED_MODULE_1___default","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","DefaultSEO","metaImage","siteUrl","DefaultImage","edges","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","length","join","_public_static_d_1195579526_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-templates-post-js-9c88549d598830b97b0d.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div className=\"flex w-100 w-50-l fl shadow-5\">\n          <div className=\"flex flex-column w-100 ride-body vh-100 lh-body\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            {children}\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Line } from 'react-chartjs-2'\nimport _ from 'lodash'\n\nlet marker\n\nlet handleOnHover = latlng => {\n  let newLatLng = { lat: parseFloat(latlng[0]), lng: parseFloat(latlng[1]) }\n\n  if (marker) {\n    marker.setPosition(\n      new window.google.maps.LatLng(newLatLng.lat, newLatLng.lng)\n    )\n  } else {\n    marker = new window.google.maps.Marker({\n      position: newLatLng,\n    })\n    marker.setMap(window.map)\n  }\n}\n\nconst AltitudeChart = props => {\n  if (props.loading) {\n    return <p />\n  } else {\n    let latlngStream = props.data[0].data\n    let distanceStream = props.data[1].data\n    let altitudeStream = props.data[2].data\n\n    function mToKm(m) {\n      return _.round(m / 1000, 2)\n    }\n\n    let distanceStreamKm = _.map(distanceStream, mToKm)\n\n    let altitudeChartDataOptions = {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        position: 'nearest',\n        displayColors: false,\n        xPadding: 20,\n        yPadding: 20,\n        caretPadding: 4,\n        titleFontSize: 12,\n        titleFontColor: 'rgba(255, 255, 255, 0.5)',\n        titleFontStyle: 'bold',\n        bodyFontSize: 14,\n        titleSpacing: 10,\n        callbacks: {\n          footer: function(tooltipItems, data) {\n            let datasets = data.datasets\n            let latlngDatasetStream = datasets[1]\n            let onHoverDataIndex = tooltipItems[0].index\n            let correspondingLatlng = latlngDatasetStream.data[onHoverDataIndex]\n\n            // Push lat lng for hover function\n            handleOnHover(correspondingLatlng)\n          },\n          label: function(t, d) {\n            // Format tooltip elevation data\n            return 'Elevation: ' + t.yLabel + 'm'\n          },\n        },\n      },\n      hover: { mode: 'nearest', intersect: true, animationDuration: 1000 },\n      layout: { padding: { left: 0 } },\n      scales: {\n        yAxes: [\n          {\n            id: 'y-axis-1',\n            gridLines: {\n              color: 'rgba(0, 0, 0, 0.06)',\n              zeroLineColor: 'rgba(255, 255, 255, 0.5)',\n            },\n            ticks: {\n              beginAtZero: false,\n              min: 0,\n              autoSkip: true,\n              autoSkipPadding: 10,\n              fontColor: 'rgba(0, 0, 0, 1)',\n              callback: function(value) {\n                return _.round(value, 1) + 'm'\n              },\n            },\n          },\n          {\n            type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n            display: false,\n            position: 'right',\n            id: 'y-axis-2',\n            // grid line settings\n            gridLines: {\n              drawOnChartArea: false, // only want the grid lines for one axis to show up\n            },\n          },\n        ],\n        xAxes: [\n          {\n            gridLines: {\n              color: 'rgba(0, 0, 0, 0.1)',\n              display: false,\n            },\n            ticks: {\n              display: false,\n              callback: function(value) {\n                return 'Distance: ' + _.round(value, 1) + ' km'\n              },\n            },\n          },\n        ],\n      },\n      legend: { display: false },\n    }\n    let altitudeChartData = {\n      labels: distanceStreamKm,\n      datasets: [\n        {\n          borderColor: 'rgba(0, 0, 0, 0)',\n          borderWidth: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.4)',\n          pointRadius: 0,\n          pointBorderWidth: 0,\n          lineTension: 0.1,\n          fill: true,\n          data: altitudeStream,\n          yAxisID: 'y-axis-1',\n        },\n        {\n          data: latlngStream,\n          showLine: false,\n        },\n      ],\n    }\n    return (\n      <div className=\"pa1\">\n        <div className=\"br2 c-altitude-card near-black\">\n          <p className=\"f5 pt4 ph4\">Elevation</p>\n          <div className=\"pa4\">\n            <Line\n              data={altitudeChartData}\n              options={altitudeChartDataOptions}\n              width={100}\n              height={30}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AltitudeChart\n","import React, { Component } from 'react'\n\nconst mapStyle = [\n  {\n    featureType: 'landscape.man_made',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#f7f1df',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape.natural',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#d0e3b4',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape.natural.terrain',\n    elementType: 'geometry',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.business',\n    elementType: 'all',\n    stylers: [\n      {\n        visibility: 'on',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.medical',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#fbd3da',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#bde6ab',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'on',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#ffe15f',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        color: '#efd151',\n      },\n    ],\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#ffffff',\n      },\n    ],\n  },\n  {\n    featureType: 'road.local',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: 'black',\n      },\n    ],\n  },\n  {\n    featureType: 'transit.station.airport',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#cfb2db',\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#a2daf2',\n      },\n    ],\n  },\n]\n\nclass Map extends Component {\n  componentDidMount() {}\n\n  initMap = () => {\n    let startLatlng = this.props.activityData.start_latlng\n    let endLatlng = this.props.activityData.end_latlng\n\n    let encodedPolyline = this.props.activityData.map.polyline\n    let decodedPolyline = window.google.maps.geometry.encoding.decodePath(\n      encodedPolyline\n    )\n\n    window.map = new window.google.maps.Map(document.getElementById('map'), {\n      center: { lat: startLatlng[0], lng: startLatlng[1] },\n      zoom: 1,\n      styles: mapStyle,\n    })\n\n    let setPolyline = new window.google.maps.Polyline({\n      path: decodedPolyline,\n      strokeColor: '#FF4136',\n      strokeOpacity: 1,\n      strokeWeight: 3,\n    })\n\n    let bounds = new window.google.maps.LatLngBounds()\n    bounds.extend({ lat: startLatlng[0], lng: startLatlng[1] })\n    bounds.extend({ lat: endLatlng[0], lng: endLatlng[1] })\n    decodedPolyline.forEach(element => {\n      bounds.extend({ lat: element.lat(), lng: element.lng() })\n    })\n\n    new window.google.maps.Marker({\n      position: { lat: startLatlng[0], lng: startLatlng[1] },\n      map: window.map,\n      icon: {\n        path: window.google.maps.SymbolPath.CIRCLE,\n        scale: 6,\n        fillOpacity: 1,\n        fillColor: '#87CF3E',\n        strokeOpacity: 1,\n        strokeWeight: 3,\n        strokeColor: '#FFFFFF',\n      },\n      title: 'Start',\n    })\n\n    new window.google.maps.Marker({\n      position: { lat: endLatlng[0], lng: endLatlng[1] },\n      map: window.map,\n      icon: {\n        path: window.google.maps.SymbolPath.CIRCLE,\n        scale: 6,\n        fillOpacity: 1,\n        fillColor: '#000000',\n        strokeOpacity: 1,\n        strokeWeight: 3,\n        strokeColor: '#FFFFFF',\n      },\n      title: 'End',\n    })\n\n    setPolyline.setMap(window.map)\n    window.map.fitBounds(bounds)\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <div id=\"map\" className=\"vh-100 vw-100 bg-near-white ride-map\" />\n    } else {\n      this.initMap()\n      return <div id=\"map\" className=\"vh-100 vw-100 bg-near-white ride-map\" />\n    }\n  }\n}\n\nexport default Map\n","import React, { Component } from 'react'\n\nclass MarkerLink extends Component {\n  showOnMap() {\n    let { label, zoom, lat, lng } = this.props\n\n    let myLatLng = { lat: parseFloat(lat), lng: parseFloat(lng) }\n    let marker = new window.google.maps.Marker({\n      position: myLatLng,\n      label: { text: label ? label : '', color: 'white' },\n    })\n\n    marker.setMap(window.map)\n    window.map.panTo(myLatLng)\n    window.map.setZoom(parseFloat(zoom))\n\n    let mapElement = document.getElementById('map')\n    mapElement.scrollIntoView({\n      behavior: 'instant',\n      block: 'start',\n      inline: 'nearest',\n    })\n  }\n  render() {\n    return (\n      <button\n        className=\"c-maker-link link pa0 b0 input-reset dim button-reset\"\n        onClick={this.showOnMap.bind(this)}\n      >\n        <span role=\"img\" aria-label=\"pin\" />\n        {this.props.children}\n        📍\n        <sup className=\"black c-marker-link-label\">{this.props.label}</sup>\n      </button>\n    )\n  }\n}\n\nexport default MarkerLink\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <svg\n      className=\"loader\"\n      width=\"28px\"\n      height=\"28px\"\n      viewBox=\"0 0 28 28\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n        strokeLinecap=\"round\"\n      >\n        <path\n          d=\"M2,14 C2,20.627417 7.372583,26 14,26 C20.627417,26 26,20.627417 26,14 C26,7.372583 20.627417,2 14,2\"\n          id=\"Path\"\n          stroke=\"#d7d7d7\"\n          strokeWidth=\"3\"\n          fillRule=\"nonzero\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport Loader from './loader'\n\nconst Stat = props => {\n  let { label, value, unit } = props\n  return (\n    <div className=\"flex flex-column tc pa1 fl w-100 w-50-ns\">\n      <div className=\" b--black-05 pa3 br2 c-strava-stats-card\">\n        <label htmlFor=\"distance\">{label}</label>\n        <h2 className=\"f3 fw7 mt1 mb0\" name=\"distance\">\n          {value} {unit}\n        </h2>\n      </div>\n    </div>\n  )\n}\n\nconst StravaStats = props => {\n  let activityData = props.activityData\n\n  // Activity distance\n  let distanceMeter = activityData.distance\n  let distanceKilometer = _.round(distanceMeter / 1000, 2)\n\n  // Activity elevation gain\n  let elevation = activityData.total_elevation_gain\n\n  // Activity calories\n  let calories = activityData.calories\n\n  // Activity moving time\n  let moving_time_seconds = activityData.moving_time\n  let formatted = moment.utc(moving_time_seconds * 1000).format('HH:mm:ss')\n\n  if (props.loading) {\n    return (\n      <div className=\"mt4 pv5 c-strava-stats black br3 flex justify-around cf flex-wrap\">\n        <Loader />\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"c-strava-stats black br2 flex flex-column flex-row-ns justify-around flex-wrap\">\n        <Stat\n          label=\"Distance\"\n          value={distanceKilometer ? distanceKilometer : 0}\n          unit=\"km\"\n        />\n        <Stat\n          label=\"Elevation Gain\"\n          value={elevation ? elevation : 0}\n          unit=\"m\"\n        />\n        <Stat label=\"Moving Time\" value={formatted ? formatted : 0} unit=\"\" />\n        <Stat label=\"Calories\" value={calories ? calories : 0} unit=\"cal\" />\n      </div>\n    )\n  }\n}\n\nexport default StravaStats\n","import React, { Component } from 'react'\n\nclass RouteCard extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <p>route card</p>\n      </div>\n    )\n  }\n}\n\nexport default RouteCard\n","import React, { Component } from 'react'\nimport RideLayout from '../components/post-layout'\nimport { graphql } from 'gatsby'\nimport Map from '../components/map'\nimport rehypeReact from 'rehype-react'\nimport Img from 'gatsby-image'\nimport Footer from '../components/footer'\nimport MarkerLink from '../components/markerLink'\nimport StravaStats from '../components/stravaStats'\nimport AltitudeChart from '../components/altitudeChart'\nimport SEO from '../components/seo'\nimport RouteCard from '../components/routeCard'\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { 'marker-link': MarkerLink, 'route-card': RouteCard },\n}).Compiler\n\nclass PostPage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      post: props.data.queryPost,\n      loading: true,\n    }\n  }\n\n  fetchData() {\n    let publicAccessToken = '011c89ee01402ab591de0240d59ee84455fd4d42'\n    let activityApiUrl =\n      'https://www.strava.com/api/v3/activities/' +\n      this.state.post.frontmatter.strava_id\n\n    let activityStreamApiUrl =\n      activityApiUrl + '/streams/altitude,latlng?resolution=medium'\n\n    let urls = [activityApiUrl, activityStreamApiUrl]\n\n    let requests = urls.map(url =>\n      fetch(url, {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json',\n          authorization: 'Bearer ' + publicAccessToken,\n        },\n      })\n        .then(resp => {\n          return resp.json()\n        })\n        .then(json => {\n          let checkIsArray = Array.isArray(json)\n          if (checkIsArray) {\n            this.setState({ streams: json })\n          } else {\n            this.setState({ activityData: json })\n          }\n        })\n    )\n\n    Promise.all(requests).then(responses => {\n      this.setState({ loading: false })\n    })\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  render() {\n    console.log(this.state.post.frontmatter);\n    return (\n      \n      <div>\n        <SEO\n          title={this.state.post.frontmatter.title}\n          keywords={[`gatsby`, `application`, `react`]}\n          description={this.state.post.frontmatter.excerpt}\n          image={\n            this.state.post.frontmatter.cover_image.childImageSharp.fluid.src\n          }\n        />\n        <RideLayout>\n          <div>\n            <Img\n              fluid={\n                this.state.post.frontmatter.cover_image.childImageSharp.fluid\n              }\n            />\n\n            <div className=\"center mw7 pa4\">\n              <div className=\"pt4 pb3 mb4 mw7 center\">\n                <h1 className=\"tc f2 f1-l mb3 near-dark lh-title serif\">\n                  {this.state.post.frontmatter.title}\n                </h1>\n                <p className=\"tc mt0 mb3 silver lh-copy\">\n                  {this.state.post.frontmatter.location} •{' '}\n                  {this.state.post.frontmatter.date} • by{' '}\n                  {this.state.post.frontmatter.author}\n                </p>\n                <div className=\"mv4-l mv3\">\n                  <AltitudeChart\n                    loading={this.state.loading}\n                    data={this.state.streams}\n                  />\n                  <StravaStats\n                    loading={this.state.loading}\n                    activityData={\n                      this.state.activityData ? this.state.activityData : 0\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"markdown-body\">\n                <div className=\"lh-copy center f4\">\n                  {renderAst(this.state.post.htmlAst)}\n                </div>\n              </div>\n              <div className=\"mt5 ph4 pv2 bg-near-white flex flex-wrap items-start\">\n                <a\n                  className=\"mv3 link w-100 w-auto-l dim db br2 mb3 mb0-l ph3 pv3 mr3-l mr0 tc b tl db white bg-black ttu\"\n                  href={this.state.post.frontmatter.route_file.publicURL}\n                >\n                  download gpx\n                </a>\n                <a\n                  className=\"mv3 link w-100 w-auto-l dim db br2 mb0 ph3 pv3 tc b tl white db bg-black ttu\"\n                  href={\n                    'https://www.strava.com/activities/' +\n                    this.state.post.frontmatter.strava_id\n                  }\n                >\n                  view strava activity\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"db-l dn\">\n            <Footer />\n          </div>\n        </RideLayout>\n        <div className=\"w-100 w-50-l top-0 bottom-0 right-0 fl\">\n          <Map\n            loading={this.state.loading}\n            activityData={this.state.activityData}\n          />\n          <div className=\"db dn-l\">\n            <Footer />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    queryPost: markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      frontmatter {\n        title\n        location\n        excerpt\n        route_file {\n          publicURL\n        }\n        author\n        strava_id\n        social_image{\n          childImageSharp {\n            fluid(maxWidth: 1400, maxHeight: 1000, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        cover_image {\n          childImageSharp {\n            fluid(maxWidth: 1400, maxHeight: 1000, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n    }\n  }\n`\n\nexport default PostPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"c-header near-black pv4 ph2 ph3-l flex justify-between items-center flex-none\">\n    <h2 className=\"ph3 lh-solid fw9 dim f3-l f4 serif c-header__logo\">\n      <Link to=\"/\" className=\"near-black no-underline ttc link\">\n        <span role=\"img\" aria-label=\"mountain\" className=\"c-header__emoji\">\n          🏔{' '}\n        </span>\n        {siteTitle}\n      </Link>\n    </h2>\n    <nav className=\"ph3\">\n      <Link to=\"/rides\" className=\"san-serif fw3 near-black link dim mr4\">\n        Rides\n      </Link>\n      <Link to=\"/about\" className=\"san-serif fw3 near-black link dim\">\n        About\n      </Link>\n    </nav>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"bg-near-white gray pv2 ph2\">\n        <div className=\"pa3\">\n          <p className=\"lh-title tc lh-copy\">\n            Journal by{' '}\n            <a className=\"link dim black\" href=\"https://twitter.com/p0pmaker\">\n              Jacky Lee\n            </a>\n            <span className=\"mh2 o-50\">•</span>\n            Built with{' '}\n            <a\n              className=\"link dim black\"\n              href=\"https://daringfireball.net/projects/markdown/syntax\"\n            >\n              Markdown\n            </a>\n            ,{' '}\n            <a className=\"link dim black\" href=\"http://tachyons.io\">\n              Tachyons\n            </a>{' '}\n            &{' '}\n            <a className=\"link dim black\" href=\"https://www.gatsbyjs.org\">\n              Gatsby\n            </a>\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, image }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.DefaultSEO.siteMetadata.description\n        const metaImage = image\n          ? data.DefaultSEO.siteMetadata.siteUrl + image\n          : data.DefaultSEO.siteMetadata.siteUrl +\n            data.DefaultImage.edges[0].node.publicURL\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.DefaultSEO.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                name: `og:image`,\n                content: metaImage,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:image`,\n                content: metaImage,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.DefaultSEO.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query {\n    DefaultSEO: site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n        siteUrl\n      }\n    }\n    DefaultImage: allFile(filter: { name: { eq: \"metaImage\" } }) {\n      edges {\n        node {\n          publicURL\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}