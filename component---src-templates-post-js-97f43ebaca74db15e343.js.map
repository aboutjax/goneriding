{"version":3,"sources":["webpack:///./src/components/post-layout.js","webpack:///./src/components/map.js","webpack:///./src/components/markerLink.js","webpack:///./src/components/loader.js","webpack:///./src/components/stravaStats.js","webpack:///./src/components/altitudeChart.js","webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js"],"names":["Layout","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","className","header","siteTitle","site","siteMetadata","title","_755544856","propTypes","PropTypes","node","isRequired","mapStyle","featureType","elementType","stylers","color","visibility","Map","initMap","startLatlng","_this","props","activityData","start_latlng","endLatlng","end_latlng","encodedPolyline","map","polyline","decodedPolyline","window","google","maps","geometry","encoding","decodePath","document","getElementById","center","lat","lng","zoom","styles","setPolyline","Polyline","path","strokeColor","strokeOpacity","strokeWeight","bounds","LatLngBounds","extend","forEach","element","Marker","position","icon","SymbolPath","CIRCLE","scale","fillOpacity","fillColor","setMap","fitBounds","componentDidMount","this","loading","id","Component","MarkerLink","showOnMap","_this$props","label","myLatLng","parseFloat","text","panTo","setZoom","scrollIntoView","behavior","block","inline","onClick","bind","role","aria-label","Loader","width","height","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","strokeLinecap","d","Stat","value","unit","htmlFor","name","StravaStats","distanceMeter","distance","distanceKilometer","_","round","elevation","total_elevation_gain","calories","moving_time_seconds","moving_time","formatted","moment","utc","format","loader","stravaStats_Stat","AltitudeChart","distanceStream","altitudeStream","altitudeChartDataOptions","tooltips","mode","intersect","displayColors","xPadding","yPadding","hover","animationDuration","layout","padding","left","scales","yAxes","gridLines","zeroLineColor","ticks","beginAtZero","min","autoSkip","autoSkipPadding","fontColor","callback","xAxes","display","legend","altitudeChartData","labels","m","datasets","borderColor","borderWidth","backgroundColor","pointRadius","pointBorderWidth","lineTension","es","options","renderAst","rehypeReact","React","components","marker-link","Compiler","PostPage","_Component","call","console","log","state","post","queryPost","fetchData","_this2","activityApiUrl","frontmatter","strava_id","requests","url","fetch","method","headers","content-type","authorization","then","resp","json","Array","isArray","setState","streams","Promise","all","responses","seo","keywords","description","excerpt","image","cover_image","childImageSharp","fluid","src","post_layout","target","rel","href","gatsby_image_default","location","date","author","altitudeChart","stravaStats","htmlAst","route_file","publicURL","footer","__webpack_require__","r","__webpack_exports__","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","Error","object","string","func","module","exports","require","default","ProdPageRenderer","pageResources","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","Header","to","defaultProps","Footer","react__WEBPACK_IMPORTED_MODULE_1___default","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","DefaultSEO","metaImage","DefaultImage","edges","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","length","join","_public_static_d_4091074332_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-templates-post-js-97f43ebaca74db15e343.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div className=\"flex w-100 w-50-l fl shadow-5\">\n          <div className=\"flex flex-column w-100 ride-body vh-100 lh-body\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            {children}\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { Component } from 'react'\n\nconst mapStyle = [\n  {\n    featureType: 'landscape.man_made',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#f7f1df',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape.natural',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#d0e3b4',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape.natural.terrain',\n    elementType: 'geometry',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.business',\n    elementType: 'all',\n    stylers: [\n      {\n        visibility: 'on',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.medical',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#fbd3da',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#bde6ab',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'on',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#ffe15f',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        color: '#efd151',\n      },\n    ],\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#ffffff',\n      },\n    ],\n  },\n  {\n    featureType: 'road.local',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: 'black',\n      },\n    ],\n  },\n  {\n    featureType: 'transit.station.airport',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#cfb2db',\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#a2daf2',\n      },\n    ],\n  },\n]\n\nclass Map extends Component {\n  componentDidMount() {}\n\n  initMap = () => {\n    let startLatlng = this.props.activityData.start_latlng\n    let endLatlng = this.props.activityData.end_latlng\n\n    let encodedPolyline = this.props.activityData.map.polyline\n    let decodedPolyline = window.google.maps.geometry.encoding.decodePath(\n      encodedPolyline\n    )\n\n    window.map = new window.google.maps.Map(document.getElementById('map'), {\n      center: { lat: startLatlng[0], lng: startLatlng[1] },\n      zoom: 1,\n      styles: mapStyle,\n    })\n\n    let setPolyline = new window.google.maps.Polyline({\n      path: decodedPolyline,\n      strokeColor: '#FF4136',\n      strokeOpacity: 1,\n      strokeWeight: 3,\n    })\n\n    let bounds = new window.google.maps.LatLngBounds()\n    bounds.extend({ lat: startLatlng[0], lng: startLatlng[1] })\n    bounds.extend({ lat: endLatlng[0], lng: endLatlng[1] })\n    decodedPolyline.forEach(element => {\n      bounds.extend({ lat: element.lat(), lng: element.lng() })\n    })\n\n    new window.google.maps.Marker({\n      position: { lat: startLatlng[0], lng: startLatlng[1] },\n      map: window.map,\n      icon: {\n        path: window.google.maps.SymbolPath.CIRCLE,\n        scale: 6,\n        fillOpacity: 1,\n        fillColor: '#000000',\n        strokeOpacity: 0,\n      },\n      title: 'Start',\n    })\n\n    new window.google.maps.Marker({\n      position: { lat: endLatlng[0], lng: endLatlng[1] },\n      map: window.map,\n      icon: {\n        path: window.google.maps.SymbolPath.CIRCLE,\n        scale: 6,\n        fillOpacity: 1,\n        fillColor: '#FF2222',\n        strokeOpacity: 0,\n      },\n      title: 'End',\n    })\n\n    setPolyline.setMap(window.map)\n    window.map.fitBounds(bounds)\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <div id=\"map\" className=\"vh-100 vw-100 bg-near-white ride-map\" />\n    } else {\n      this.initMap()\n      return <div id=\"map\" className=\"vh-100 vw-100 bg-near-white ride-map\" />\n    }\n  }\n}\n\nexport default Map\n","import React, { Component } from 'react'\n\nclass MarkerLink extends Component {\n  showOnMap() {\n    let { label, zoom, lat, lng } = this.props\n\n    let myLatLng = { lat: parseFloat(lat), lng: parseFloat(lng) }\n    let marker = new window.google.maps.Marker({\n      position: myLatLng,\n      label: { text: label ? label : '', color: 'white' },\n    })\n\n    marker.setMap(window.map)\n    window.map.panTo(myLatLng)\n    window.map.setZoom(parseFloat(zoom))\n\n    let mapElement = document.getElementById('map')\n    mapElement.scrollIntoView({\n      behavior: 'instant',\n      block: 'start',\n      inline: 'nearest',\n    })\n  }\n  render() {\n    return (\n      <button\n        className=\"c-maker-link link pa0 b0 input-reset dim button-reset\"\n        onClick={this.showOnMap.bind(this)}\n      >\n        <span role=\"img\" aria-label=\"pin\" />\n        {this.props.children}\n        📍\n        <sup className=\"black c-marker-link-label\">{this.props.label}</sup>\n      </button>\n    )\n  }\n}\n\nexport default MarkerLink\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <svg\n      className=\"loader\"\n      width=\"28px\"\n      height=\"28px\"\n      viewBox=\"0 0 28 28\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n        strokeLinecap=\"round\"\n      >\n        <path\n          d=\"M2,14 C2,20.627417 7.372583,26 14,26 C20.627417,26 26,20.627417 26,14 C26,7.372583 20.627417,2 14,2\"\n          id=\"Path\"\n          stroke=\"#d7d7d7\"\n          strokeWidth=\"3\"\n          fillRule=\"nonzero\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport Loader from './loader'\n\nconst Stat = props => {\n  let { label, value, unit } = props\n  return (\n    <div className=\"flex flex-column tc pa1 fl w-100 w-50-ns\">\n      <div className=\" b--black-05 pa3 br2 c-strava-stats-card\">\n        <label htmlFor=\"distance\">{label}</label>\n        <h2 className=\"f3 fw7 mt1 mb0\" name=\"distance\">\n          {value} {unit}\n        </h2>\n      </div>\n    </div>\n  )\n}\n\nconst StravaStats = props => {\n  let activityData = props.activityData\n\n  // Activity distance\n  let distanceMeter = activityData.distance\n  let distanceKilometer = _.round(distanceMeter / 1000, 2)\n\n  // Activity elevation gain\n  let elevation = activityData.total_elevation_gain\n\n  // Activity calories\n  let calories = activityData.calories\n\n  // Activity moving time\n  let moving_time_seconds = activityData.moving_time\n  let formatted = moment.utc(moving_time_seconds * 1000).format('HH:mm:ss')\n\n  if (props.loading) {\n    return (\n      <div className=\"mt4 pv5 c-strava-stats black br3 flex justify-around cf flex-wrap\">\n        <Loader />\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"c-strava-stats black br2 flex flex-column flex-row-ns justify-around flex-wrap\">\n        <Stat\n          label=\"Distance\"\n          value={distanceKilometer ? distanceKilometer : 0}\n          unit=\"km\"\n        />\n        <Stat\n          label=\"Elevation Gain\"\n          value={elevation ? elevation : 0}\n          unit=\"m\"\n        />\n        <Stat label=\"Moving Time\" value={formatted ? formatted : 0} unit=\"\" />\n        <Stat label=\"Calories\" value={calories ? calories : 0} unit=\"cal\" />\n      </div>\n    )\n  }\n}\n\nexport default StravaStats\n","import React from 'react'\nimport { Line } from 'react-chartjs-2'\nimport _ from 'lodash'\n\nconst AltitudeChart = props => {\n  if (props.loading) {\n    return <p />\n  } else {\n    let distanceStream = props.data[1].data\n    let altitudeStream = props.data[2].data\n\n    function mToKm(m) {\n      return _.round(m / 1000, 2)\n    }\n\n    let distanceStreamKm = _.map(distanceStream, mToKm)\n\n    let altitudeChartDataOptions = {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        displayColors: false,\n        xPadding: 10,\n        yPadding: 10,\n      },\n      hover: { mode: 'nearest', intersect: true, animationDuration: 1000 },\n      layout: { padding: { left: 0 } },\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              color: 'rgba(0, 0, 0, 0.06)',\n              zeroLineColor: 'rgba(255, 255, 255, 0.5)',\n            },\n            ticks: {\n              beginAtZero: false,\n              min: 0,\n              autoSkip: true,\n              autoSkipPadding: 10,\n              fontColor: 'rgba(0, 0, 0, 1)',\n              callback: function(value) {\n                return _.round(value, 1) + 'm'\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            gridLines: {\n              color: 'rgba(0, 0, 0, 0.1)',\n              display: false,\n            },\n            ticks: {\n              display: false,\n              callback: function(value) {\n                return _.round(value, 1) + ' km'\n              },\n            },\n          },\n        ],\n      },\n      legend: { display: false },\n    }\n    let altitudeChartData = {\n      labels: distanceStreamKm,\n      datasets: [\n        {\n          borderColor: 'rgba(0, 0, 0, 0)',\n          borderWidth: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.4)',\n          pointRadius: 0,\n          pointBorderWidth: 0,\n          lineTension: 0.1,\n          fill: true,\n          data: altitudeStream,\n        },\n      ],\n    }\n    return (\n      <div className=\"pa1\">\n        <div className=\"br2 c-altitude-card near-black\">\n          <p className=\"f5 pt4 ph4\">Elevation</p>\n          <div className=\"pa4\">\n            <Line\n              data={altitudeChartData}\n              options={altitudeChartDataOptions}\n              width={100}\n              height={20}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AltitudeChart\n","import React, { Component } from 'react'\nimport RideLayout from '../components/post-layout'\nimport { graphql } from 'gatsby'\nimport Map from '../components/map'\nimport rehypeReact from 'rehype-react'\nimport Img from 'gatsby-image'\nimport Footer from '../components/footer'\nimport MarkerLink from '../components/markerLink'\nimport StravaStats from '../components/stravaStats'\nimport AltitudeChart from '../components/altitudeChart'\nimport SEO from '../components/seo'\nimport 'github-markdown-css'\n// import '../styles/index.scss'\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { 'marker-link': MarkerLink },\n}).Compiler\n\nclass PostPage extends Component {\n  constructor(props) {\n    super(props)\n\n    console.log(props.data)\n\n    this.state = {\n      post: props.data.queryPost,\n      loading: true,\n    }\n  }\n\n  fetchData() {\n    let publicAccessToken = '011c89ee01402ab591de0240d59ee84455fd4d42'\n    let activityApiUrl =\n      'https://www.strava.com/api/v3/activities/' +\n      this.state.post.frontmatter.strava_id\n\n    let activityStreamApiUrl =\n      activityApiUrl + '/streams/altitude,latlng?resolution=medium'\n\n    let urls = [activityApiUrl, activityStreamApiUrl]\n\n    let requests = urls.map(url =>\n      fetch(url, {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json',\n          authorization: 'Bearer ' + publicAccessToken,\n        },\n      })\n        .then(resp => {\n          return resp.json()\n        })\n        .then(json => {\n          let checkIsArray = Array.isArray(json)\n          if (checkIsArray) {\n            this.setState({ streams: json })\n          } else {\n            this.setState({ activityData: json })\n          }\n        })\n    )\n\n    Promise.all(requests).then(responses => {\n      this.setState({ loading: false })\n    })\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  render() {\n    return (\n      <div>\n        <SEO\n          title={this.state.post.frontmatter.title}\n          keywords={[`gatsby`, `application`, `react`]}\n          description={this.state.post.frontmatter.excerpt}\n          image={\n            this.state.post.frontmatter.cover_image.childImageSharp.fluid.src\n          }\n        />\n        <RideLayout>\n          <div>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={\n                this.state.post.frontmatter.cover_image.childImageSharp.fluid\n                  .src\n              }\n            >\n              <Img\n                fluid={\n                  this.state.post.frontmatter.cover_image.childImageSharp.fluid\n                }\n              />\n            </a>\n\n            <div className=\"center mw8 pa4\">\n              <div className=\"pt4 pb3 mb4 mw7 center\">\n                <h1 className=\"tc f2 f1-l mb3 near-dark lh-title serif\">\n                  {this.state.post.frontmatter.title}\n                </h1>\n                <p className=\"tc mt0 mb3 silver lh-copy\">\n                  {this.state.post.frontmatter.location} •{' '}\n                  {this.state.post.frontmatter.date} • by{' '}\n                  {this.state.post.frontmatter.author}\n                </p>\n                <div className=\"mv4-l mv3\">\n                  <AltitudeChart\n                    loading={this.state.loading}\n                    data={this.state.streams}\n                  />\n                  <StravaStats\n                    loading={this.state.loading}\n                    activityData={\n                      this.state.activityData ? this.state.activityData : 0\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"markdown-body\">\n                <div className=\"lh-copy center f4\">\n                  {renderAst(this.state.post.htmlAst)}\n                </div>\n              </div>\n              <div className=\"mt5 pa4 bg-near-white flex flex-wrap items-start\">\n                <a\n                  className=\"link w-100 w-auto-l dim db br2 mb3 mb0-l ph3 pv3 mr3-l mr0 tc b tl db white bg-black ttu\"\n                  href={this.state.post.frontmatter.route_file.publicURL}\n                >\n                  download gpx\n                </a>\n                <a\n                  className=\"link w-100 w-auto-l dim db br2 mb0 ph3 pv3 tc b tl white db bg-black ttu\"\n                  href={\n                    'https://www.strava.com/activities/' +\n                    this.state.post.frontmatter.strava_id\n                  }\n                >\n                  view strava activity\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"db-l dn\">\n            <Footer />\n          </div>\n        </RideLayout>\n        <div className=\"w-100 w-50-l top-0 bottom-0 right-0 fl\">\n          <Map\n            loading={this.state.loading}\n            activityData={this.state.activityData}\n          />\n          <div className=\"db dn-l\">\n            <Footer />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    queryPost: markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      frontmatter {\n        title\n        location\n        excerpt\n        route_file {\n          publicURL\n        }\n        author\n        strava_id\n        cover_image {\n          childImageSharp {\n            fluid(maxWidth: 1400, maxHeight: 1000, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n    }\n  }\n`\n\nexport default PostPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"c-header near-black pv4 ph2 ph3-l flex justify-between items-center flex-none\">\n    <h2 className=\"ph3 lh-solid fw9 dim f3-l f4 serif c-header__logo\">\n      <Link to=\"/\" className=\"near-black no-underline ttc link\">\n        <span role=\"img\" aria-label=\"mountain\">\n          🏔{' '}\n        </span>\n        {siteTitle}\n      </Link>\n    </h2>\n    <nav className=\"ph3\">\n      <Link to=\"/rides\" className=\"san-serif fw3 near-black link dim mr4\">\n        Rides\n      </Link>\n      <Link to=\"/about\" className=\"san-serif fw3 near-black link dim\">\n        About\n      </Link>\n    </nav>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"bg-near-white gray pv2 ph2\">\n        <div className=\"pa3\">\n          <p className=\"lh-title tc lh-copy\">\n            Built with{' '}\n            <a\n              className=\"link dim black\"\n              href=\"https://daringfireball.net/projects/markdown/syntax\"\n            >\n              Markdown\n            </a>\n            ,{' '}\n            <a className=\"link dim black\" href=\"http://tachyons.io\">\n              Tachyons\n            </a>{' '}\n            &{' '}\n            <a className=\"link dim black\" href=\"https://www.gatsbyjs.org\">\n              Gatsby\n            </a>\n            {' • '}A Project by{' '}\n            <a className=\"link dim black\" href=\"https://twitter.com/p0pmaker\">\n              Jacky Lee\n            </a>\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, image }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.DefaultSEO.siteMetadata.description\n        const metaImage = image || data.DefaultImage.edges[0].node.publicURL\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.DefaultSEO.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                name: `og:image`,\n                content: metaImage,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:image`,\n                content: metaImage,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.DefaultSEO.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query {\n    DefaultSEO: site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n    DefaultImage: allFile(filter: { name: { eq: \"metaImage\" } }) {\n      edges {\n        node {\n          publicURL\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}